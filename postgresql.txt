---Создать представление (view), в котором содержится категория продукта, название продукта и цена за единицу продукта

create view prod_cast as
select product_name, category_name, unit_price from products
left join categories on products.category_id - categories.category_id;

---Используя представление, вывести количество продуктов в каждой категории и общее количество продуктов 

select category_name, count(*) from prod_cat
group by category_name
union all
select '----','-----'
union all
select 'Total', count(*) from prod_cat;

---Cross join

drop table ranks;
drop table suits;
create temporary table ranks(name varchar(2));
create temporary table suits(name2 varchar(10));
INSERT INTO ranks(name) VALUES('6'),('7'),('8'),('9'),('10'),('В'),('Д'),('К'),('Т');
INSERT INTO suits(name2) VALUES ('пики'),('червы'),('бубны'),('трефы');
create temporary table cards as select * from ranks cross join suits; 

create temporary table t1(v1 int);
insert into t1(v1) values (1),(2),(3);
create temporary table t2(v1 int);
insert into t2(v2) values (2),(3),(4);

select v1 from t1
intersect
select v2 from t2;



drop table if exists accounts;
drop table if exists account_changes;

CREATE TABLE accounts ( 
	account_no serial NOT NULL, 
	balance DECIMAL NOT NULL DEFAULT 0,
	PRIMARY KEY(account_no),
        CHECK(balance >= 0)
);

CREATE TABLE account_changes (
	change_no serial PRIMARY KEY,
	account_no INTEGER NOT NULL, 
	flag TEXT NOT NULL, 
	amount DECIMAL NOT NULL, 
	changed_at TEXT NOT NULL 
); 

INSERT INTO accounts (balance) VALUES (2000);
INSERT INTO accounts (balance) VALUES (1000);

BEGIN TRANSACTION;
UPDATE accounts SET balance = balance - 100 WHERE account_no = 100;
UPDATE accounts SET balance = balance + 100 WHERE account_no = 200;
INSERT INTO account_changes(account_no,flag,amount,changed_at) 
VALUES(1,'-',100,now());

INSERT INTO account_changes(account_no,flag,amount,changed_at) 
VALUES(2,'+',100,now());

COMMIT;

select * from accounts;
select * from account_changes;

Снять сумму, превышающую сумму на счету
BEGIN TRANSACTION;
UPDATE accounts
   SET balance = balance - 20000
 WHERE account_no = 100;
INSERT INTO account_changes(account_no,flag,amount,changed_at) 
VALUES(100,'-',20000,datetime('now'));

SELECT * FROM account_changes;

ROLLBACK; 